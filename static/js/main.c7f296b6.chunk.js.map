{"version":3,"sources":["components/Loader/Spiner.module.css","servises/api.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Loader/Spiner.js","components/ImageGallery/ImageGallery.js","components/Searchbar/Searchbar.js","components/App.js","index.js"],"names":["module","exports","getImages","pictureTag","page","fetch","then","res","json","data","hits","Modal","state","handleKeyDown","e","code","props","onClose","handleBackdropeClick","currentTarget","target","window","addEventListener","this","removeEventListener","className","onClick","src","picture","alt","Component","ImageGalleryItem","showModal","largeImage","toggleModal","largeImageURL","setState","prev","pictures","map","webformatURL","tags","id","Spiner","style","spiner","type","color","height","width","timeout","ImageGallery","isHidden","loading","onBtnClick","catch","err","console","log","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","prevProps","prevState","Searchbar","handleChange","value","handleSubmit","preventDefault","trim","onSubmit","toast","error","autocomplete","autofocus","placeholder","onChange","App","handleFormSubmit","autoClose","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c7f296b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spiner\":\"Spiner_spiner__LEK76\"};","const BASE_URL = 'https://pixabay.com/api/';\nconst ApiKey = '23292675-06f406722274daa99671b1028';\n\nexport const getImages = (pictureTag, page) => {\n  return fetch(\n    `${BASE_URL}?q=${pictureTag}&page=${page}&key=${ApiKey}&image_type=photo&orientation=horizontal&per_page=12`,\n  )\n    .then(res => res.json())\n    .then(data => data.hits);\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Modal extends Component {\n  state = {};\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose(e);\n    }\n  };\n\n  handleBackdropeClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose(e);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Overlay\" onClick={this.handleBackdropeClick}>\n        <div className=\"Modal\">\n          <img src={this.props.picture} alt=\"\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  picture: PropTypes.string,\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport Modal from '../Modal/Modal';\n\nclass ImageGalleryItem extends Component {\n  state = {\n    showModal: false,\n    largeImage: '',\n  };\n\n  toggleModal = largeImageURL => {\n    this.setState(prev => ({\n      showModal: !prev.showModal,\n      largeImage: largeImageURL,\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.pictures.map(picture => {\n          const togglePicture = () => this.toggleModal(picture.largeImageURL);\n          return (\n            <li className=\"ImageGalleryItem\" key={picture.id}>\n              <img\n                src={picture.webformatURL}\n                alt={picture.tags}\n                className=\"ImageGalleryItem-image\"\n                onClick={togglePicture}\n                id={picture.largeImageURL}\n              />\n            </li>\n          );\n        })}\n        {this.state.showModal && (\n          <Modal onClose={this.toggleModal} picture={this.state.largeImage} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default ImageGalleryItem;\n","import Loader from 'react-loader-spinner';\nimport React, { Component } from 'react';\nimport style from './Spiner.module.css';\n\nexport default class Spiner extends Component {\n  //other logic\n  render() {\n    return (\n      <div className={style.spiner}>\n        {' '}\n        <Loader\n          type=\"TailSpin\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000} //3 secs\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { getImages } from '../../servises/api';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport PropTypes from 'prop-types';\nimport Loader from '../Loader/Spiner';\n\nclass ImageGallery extends Component {\n  state = {\n    pictures: null,\n    isHidden: false,\n    page: 1,\n    loading: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.pictureTag !== this.props.pictureTag) {\n      this.setState({ loading: true });\n      getImages(this.props.pictureTag, 1)\n        .then(pictures =>\n          this.setState(prev => ({\n            pictures,\n            isHidden: true,\n            page: prev.page + 1,\n          })),\n        )\n        .catch(err => console.log(err))\n        .finally(() => this.setState({ loading: false }));\n    }\n  }\n\n  onBtnClick = () => {\n    this.setState({ loading: true });\n    getImages(this.props.pictureTag, this.state.page)\n      .then(pictures =>\n        this.setState(prev => ({\n          pictures: [...prev.pictures, ...pictures],\n          isHidden: true,\n          page: prev.page + 1,\n          loading: true,\n        })),\n      )\n      .catch(err => console.log(err))\n      .finally(\n        () => this.setState({ loading: false }),\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        }),\n      );\n  };\n\n  render() {\n    return (\n      <div className=\"ImageContainer\">\n        {this.state.loading && <Loader />}\n        <ul className=\"ImageGallery\">\n          {this.state.pictures && (\n            <ImageGalleryItem pictures={this.state.pictures} />\n          )}\n        </ul>\n        {this.state.isHidden && (\n          <button type=\"button\" className=\"Button\" onClick={this.onBtnClick}>\n            Load more\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  pictureTag: PropTypes.string,\n};\n\nexport default ImageGallery;\n","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nclass Searchbar extends Component {\n  state = {\n    picture: '',\n  };\n\n  handleChange = e => {\n    this.setState({ picture: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.picture.trim() === '') {\n      toast.error('Введите название картинки');\n      return;\n    }\n    this.props.onSubmit(this.state.picture);\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autocomplete=\"off\"\n            autofocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default Searchbar;\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Searchbar from './Searchbar/Searchbar';\n\nclass App extends Component {\n  state = {\n    pictureTag: '',\n  };\n\n  handleFormSubmit = pictureTag => {\n    this.setState({ pictureTag });\n  };\n\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery pictureTag={this.state.pictureTag} />\n        <ToastContainer autoClose={3000} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}